
@model boilerplate.Models.AuctionViewModel
@{
    ViewData["Title"] = "Home";
}
<h1> New Auction:</h1>
        <div class="row">
            <form class="w-100" asp-controller="Home" asp-action="createAuction" method="post">
                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                              <span asp-for="product_name"></span>
                              <input asp-for="product_name" class="form-control" placeholder="Product Name"/>
                        </div>
                        <div class="form-group">
                              <span asp-for="description"></span>
                              <input asp-for="description" class="form-control" placeholder="Describe Product"/>
                        </div>
                          <div class="form-group">
                              <span asp-for="price"></span>
                              <input asp-for="price" class="form-control" placeholder="Starting Bid"/>
                        </div>
                         <div class="form-group">
                               <span asp-for="date"></span>
                                <input asp-for="date" class="form-control" placeholder="End Date"/>
                        </div>
                        <div class="form-group">
                             <button type="submit" class="btn btn-default">Create Auction!</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>      
@{
        try
        {
            // If ViewBag.error is null, this might throw an error.
            foreach(var error in ViewBag.errors)
            {
                //If there are any errors for a field...
                if(@error.Errors.Count > 0)
                {
                    // We show the first error for that field
                    <p>@error.Errors[0].ErrorMessage</p>
                }
            }
        }   
        catch(Exception ex)
        {
        }
}


    